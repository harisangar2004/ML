#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <arpa/inet.h>
#include <unistd.h>

#define PORT 9090

// Simple function to return webpage content
void get_page_content(const char *request, char *response) {
    if (strcmp(request, "GET /index.html") == 0) {
        strcpy(response, "<html><body><h1>Welcome to the Web Server</h1></body></html>");
    } else {
        strcpy(response, "404 Not Found");
    }
}

int main() {
    int server_fd, new_socket;
    struct sockaddr_in address;
    char buffer[1024] = {0};
    char response[1024] = {0};

    // Create socket for web server
    if ((server_fd = socket(AF_INET, SOCK_STREAM, 0)) == 0) {
        perror("Socket failed");
        exit(EXIT_FAILURE);
    }

    address.sin_family = AF_INET;
    address.sin_port = htons(PORT);
    address.sin_addr.s_addr = INADDR_ANY;

    // Bind socket
    if (bind(server_fd, (struct sockaddr*)&address, sizeof(address)) < 0) {
        perror("Bind failed");
        exit(EXIT_FAILURE);
    }

    // Listen for cache server requests
    if (listen(server_fd, 5) < 0) {
        perror("Listen failed");
        exit(EXIT_FAILURE);
    }

    printf("Web server is running...\n");

    while (1) {
        if ((new_socket = accept(server_fd, NULL, NULL)) < 0) {
            perror("Accept failed");
            exit(EXIT_FAILURE);
        }

        // Receive request from cache server
        read(new_socket, buffer, sizeof(buffer));
        printf("Received request: %s\n", buffer);

        // Get the content of the requested page
        get_page_content(buffer, response);

        // Send response back to cache server
        send(new_socket, response, strlen(response), 0);

        close(new_socket);
    }

    return 0;
}
